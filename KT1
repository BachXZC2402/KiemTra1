{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8598714,"sourceType":"datasetVersion","datasetId":5144312}],"dockerImageVersionId":30716,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nguynngcback/notebookbf2405a63f-ipynb?scriptVersionId=181366494\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.arima.model import ARIMA\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom hmmlearn import hmm\nfrom sklearn.impute import SimpleImputer\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nfrom statsmodels.tsa.stattools import adfuller\nfrom numpy import log","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-04T02:11:46.865387Z","iopub.execute_input":"2024-06-04T02:11:46.865834Z","iopub.status.idle":"2024-06-04T02:11:46.872691Z","shell.execute_reply.started":"2024-06-04T02:11:46.865798Z","shell.execute_reply":"2024-06-04T02:11:46.871396Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"msv = 2151260830\nTest = msv%3 + 1\nprint(\"Đề\", Test)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:46.879522Z","iopub.execute_input":"2024-06-04T02:11:46.880088Z","iopub.status.idle":"2024-06-04T02:11:46.886594Z","shell.execute_reply.started":"2024-06-04T02:11:46.880038Z","shell.execute_reply":"2024-06-04T02:11:46.885569Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Đọc dữ liệu\ndata = pd.read_csv('/kaggle/input/kiemtra1data/data-kiem-tra-1.csv')\n\n# Chuyển cột 'date' sang định dạng datetime với định dạng cụ thể\ndata['date'] = pd.to_datetime(data['date'], format='%d.%m.%Y')\n\n# Đặt cột 'date' làm chỉ mục\n# data.set_index('date', inplace=True)\n\n# Chọn cột để dự đoán (ví dụ: 'truong_1')\nseries = data['truong_5']\n","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:46.889117Z","iopub.execute_input":"2024-06-04T02:11:46.889895Z","iopub.status.idle":"2024-06-04T02:11:47.493476Z","shell.execute_reply.started":"2024-06-04T02:11:46.889829Z","shell.execute_reply":"2024-06-04T02:11:47.492448Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:47.494668Z","iopub.execute_input":"2024-06-04T02:11:47.494968Z","iopub.status.idle":"2024-06-04T02:11:47.508003Z","shell.execute_reply.started":"2024-06-04T02:11:47.494943Z","shell.execute_reply":"2024-06-04T02:11:47.506798Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:47.509337Z","iopub.execute_input":"2024-06-04T02:11:47.509661Z","iopub.status.idle":"2024-06-04T02:11:47.524654Z","shell.execute_reply.started":"2024-06-04T02:11:47.509635Z","shell.execute_reply":"2024-06-04T02:11:47.523433Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:47.528706Z","iopub.execute_input":"2024-06-04T02:11:47.529503Z","iopub.status.idle":"2024-06-04T02:11:47.543079Z","shell.execute_reply.started":"2024-06-04T02:11:47.529446Z","shell.execute_reply":"2024-06-04T02:11:47.541899Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(14, 7))\nplt.plot(series, label='Dữ liệu ban đầu')\nplt.legend()\nplt.title('Dữ liệu ban đầu')\nplt.xlabel('Thời gian')\nplt.ylabel('Giá trị')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:47.544312Z","iopub.execute_input":"2024-06-04T02:11:47.544636Z","iopub.status.idle":"2024-06-04T02:11:48.25631Z","shell.execute_reply.started":"2024-06-04T02:11:47.544609Z","shell.execute_reply":"2024-06-04T02:11:48.255348Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# HMM model","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nplt.scatter(data[\"date\"], data[\"truong_5\"], color='red', label='truong_5')\nplt.xlabel('Date')\nplt.ylabel('truong_5')\nplt.title('Scatter plot')\nplt.legend()\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:48.257629Z","iopub.execute_input":"2024-06-04T02:11:48.258015Z","iopub.status.idle":"2024-06-04T02:11:53.210684Z","shell.execute_reply.started":"2024-06-04T02:11:48.257983Z","shell.execute_reply":"2024-06-04T02:11:53.209357Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X = data[[\"truong_5\"]].values\nimputer = SimpleImputer(strategy='mean')  \nX = imputer.fit_transform(X)\nmodel = hmm.GaussianHMM(n_components = 3, covariance_type = \"diag\", n_iter = 50, random_state = 42)\nmodel.fit(X)\nZ = model.predict(X)\nstates = pd.unique(Z)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:53.212291Z","iopub.execute_input":"2024-06-04T02:11:53.212747Z","iopub.status.idle":"2024-06-04T02:11:58.022842Z","shell.execute_reply.started":"2024-06-04T02:11:53.212707Z","shell.execute_reply":"2024-06-04T02:11:58.021266Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"colors = ['b', 'g', 'r', 'c', 'm', 'y', 'k']\n\nplt.figure(figsize=(15, 10))\n\n# Vẽ subplot đầu tiên\nplt.subplot(2, 1, 1)\nfor i, state in enumerate(states):\n    want = (Z == state)\n    x = data[\"date\"].iloc[want]\n    y = data[\"truong_5\"].iloc[want]\n    plt.plot(x, y, '.', color=colors[i], label=state)\nplt.legend(fontsize=12)\nplt.grid(True)\nplt.xlabel(\"Date\", fontsize=14)\nplt.ylabel(\"truong_5\", fontsize=14)\n\n# Vẽ subplot thứ hai\nplt.subplot(2, 1, 2)\nfor i, state in enumerate(states):\n    want = (Z == state)\n    x = data[\"date\"].iloc[want]\n    y = data[\"truong_5\"].iloc[want]\n    plt.plot(x, y, '.', color=colors[i], label=state)\nplt.legend(fontsize=12)\nplt.grid(True)\nplt.xlabel(\"Date\", fontsize=14)\nplt.ylabel(\"truong_5\", fontsize=14)\n\nplt.tight_layout()  # Đảm bảo các subplot không chồng lên nhau\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:11:58.024699Z","iopub.execute_input":"2024-06-04T02:11:58.025243Z","iopub.status.idle":"2024-06-04T02:12:00.510408Z","shell.execute_reply.started":"2024-06-04T02:11:58.025204Z","shell.execute_reply":"2024-06-04T02:12:00.509359Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# ARIMA Model","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\n# Autocorrelation Function (ACF)\nplot_acf(data['truong_5'], lags=20, ax=plt.gca())\nplt.title('Autocorrelation Function for truong_5')\nplt.xlabel('Lag')\nplt.ylabel('Autocorrelation')\nplt.grid(True)\nplt.show()\n\nplt.figure(figsize=(10, 6))\n# Partial Autocorrelation Function (PACF)\nplot_pacf(data['truong_5'], lags=20, ax=plt.gca())\nplt.title('Partial Autocorrelation Function for truong_5')\nplt.xlabel('Lag')\nplt.ylabel('Partial Autocorrelation')\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:12:00.511606Z","iopub.execute_input":"2024-06-04T02:12:00.511928Z","iopub.status.idle":"2024-06-04T02:12:56.588374Z","shell.execute_reply.started":"2024-06-04T02:12:00.5119Z","shell.execute_reply":"2024-06-04T02:12:56.587172Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = data['truong_5']\n\nplt.rcParams.update({'figure.figsize': (12, 4), 'figure.dpi': 120})\n\n# Thực hiện bước chênh lệch đầu tiên trên dữ liệu\ndf_diff = df.diff().dropna()\n\n# Vẽ biểu đồ cho dữ liệu đã chênh lệch và hàm tự tương quan riêng phần (PACF)\nfig, axes = plt.subplots(1, 2, sharex=True)\naxes[0].plot(df_diff)\naxes[0].set_title('1st Differencing')\n\n# Vẽ hàm tự tương quan riêng phần (PACF)\nplot_pacf(df_diff, ax=axes[1])\naxes[1].set_title('Partial Autocorrelation Function (PACF)')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:12:56.590337Z","iopub.execute_input":"2024-06-04T02:12:56.590693Z","iopub.status.idle":"2024-06-04T02:12:58.9649Z","shell.execute_reply.started":"2024-06-04T02:12:56.590661Z","shell.execute_reply":"2024-06-04T02:12:58.963884Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model = ARIMA(df,order =(1,1,2))\nmodel_fit = model.fit()\nprint(model_fit.summary())","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:12:58.966001Z","iopub.execute_input":"2024-06-04T02:12:58.966293Z","iopub.status.idle":"2024-06-04T02:15:55.841728Z","shell.execute_reply.started":"2024-06-04T02:12:58.966268Z","shell.execute_reply":"2024-06-04T02:15:55.840144Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model = ARIMA(data['truong_5'], order=(1, 1, 2))\nmodel_fit = model.fit()\n\n# Tạo biểu đồ cho các sai số (residuals)\nplt.figure(figsize=(12, 6))\nresiduals = model_fit.resid\nplt.plot(residuals)\nplt.xlabel('Date')\nplt.ylabel('Residuals')\nplt.title('Residuals Plot')\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:16:28.981421Z","iopub.execute_input":"2024-06-04T02:16:28.982384Z","iopub.status.idle":"2024-06-04T02:18:31.36279Z","shell.execute_reply.started":"2024-06-04T02:16:28.982341Z","shell.execute_reply":"2024-06-04T02:18:31.361624Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# tính lại độ do sau khi train qua mô hình ARIMA\nprint('ADF Statistic : %f' %adfuller(residuals)[0])\nprint('p-values: %f'%adfuller(residuals)[1])","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:19:01.375458Z","iopub.execute_input":"2024-06-04T02:19:01.376284Z","iopub.status.idle":"2024-06-04T02:22:37.170008Z","shell.execute_reply.started":"2024-06-04T02:19:01.376247Z","shell.execute_reply":"2024-06-04T02:22:37.16863Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# SARIMA Model","metadata":{}},{"cell_type":"code","source":"# # Huấn luyện mô hình SARIMA (p, d, q) x (P, D, Q, s)\n# sarima_model = SARIMAX(data['truong_5'], order=(1, 1, 1), seasonal_order=(1, 1, 1, 12))\n# sarima_results = sarima_model.fit()\n\n# # Dự đoán với mô hình SARIMA\n# sarima_forecast = sarima_results.forecast(steps=10)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T02:22:57.127706Z","iopub.execute_input":"2024-06-04T02:22:57.128703Z","iopub.status.idle":"2024-06-04T02:34:43.258813Z","shell.execute_reply.started":"2024-06-04T02:22:57.128665Z","shell.execute_reply":"2024-06-04T02:34:43.256929Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# plt.plot(sarima_forecast, label='Dự đoán SARIMA', color='green')","metadata":{},"execution_count":null,"outputs":[]}]}